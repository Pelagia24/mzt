basePath: /api/v1
definitions:
  dto.LoginDto:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.RegistrationDto:
    properties:
      age:
        type: integer
      birthdate:
        type: string
      city:
        type: string
      email:
        type: string
      employment:
        description: Age             uint      `json:"age" binding:"required"`
        type: string
      is_business_owner:
        type: string
      month_income:
        type: integer
      name:
        type: string
      password:
        description: MonthIncome     uint      `json:"month_income" binding:"required"`
        type: string
      phone_number:
        type: string
      position_at_work:
        type: string
      telegram:
        type: string
    required:
    - birthdate
    - city
    - email
    - employment
    - is_business_owner
    - name
    - password
    - phone_number
    - position_at_work
    - telegram
    type: object
  dto.UpdateUserDto:
    properties:
      age:
        type: integer
      birthdate:
        type: string
      city:
        type: string
      email:
        type: string
      employment:
        description: Age             uint      `json:"age" binding:"required"`
        type: string
      is_business_owner:
        type: string
      month_income:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      position_at_work:
        type: string
      telegram:
        type: string
    required:
    - birthdate
    - city
    - email
    - employment
    - is_business_owner
    - name
    - phone_number
    - position_at_work
    - telegram
    type: object
host: localhost:8080
info:
  contact:
    email: ABOBA
    name: API Support
  description: This is an API for authentication and authorization.
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: API
  version: "1.0"
paths:
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Refresh tokens
      tags:
      - User
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Sign in user
      parameters:
      - description: User login info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Sign in user
      tags:
      - User
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Sign up user
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RegistrationDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Sign up user
      tags:
      - User
  /users/:
    get:
      consumes:
      - application/json
      description: Gets all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all users info(only admin)
      tags:
      - User
  /users/:user_id:
    delete:
      consumes:
      - application/json
      description: Deletes user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete user by dto (only admin)
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Gets user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get user by dto (only admin)
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates user
      parameters:
      - description: User to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update user by dto (only admin)
      tags:
      - User
  /users/:user_id/role:
    get:
      consumes:
      - application/json
      description: Gets all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get user role by id
      tags:
      - User
  /users/me:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get user profile
      tags:
      - User
swagger: "2.0"
